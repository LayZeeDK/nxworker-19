name: CI

on:
  push:
    branches:
      - main
  pull_request:
  workflow_dispatch:
    inputs:
      ref:
        description: 'Git ref to run against'
        required: false

permissions:
  contents: read # default to read-only access for repository contents

jobs:
  build:
    permissions:
      checks: write # Create and update check runs via Checks API
      statuses: write # workflow_dispatch runs post commit status updates via gh api (backward compat)
    runs-on: ubuntu-24.04-arm # Linux arm64
    steps:
      - name: Determine checkout ref
        id: checkout-ref
        shell: bash
        env:
          EVENT_INPUT_REF: ${{ github.event.inputs.ref }}
          DEFAULT_REF: ${{ github.ref }}
        run: |
          if [ -n "${EVENT_INPUT_REF}" ]; then
            echo "ref=${EVENT_INPUT_REF}" >> "$GITHUB_OUTPUT"
          else
            echo "ref=${DEFAULT_REF}" >> "$GITHUB_OUTPUT"
          fi

      - uses: actions/checkout@v5
        with:
          # We need to fetch all branches and commits so that Nx affected has a base to compare against.
          fetch-depth: 0
          filter: tree:0 # Optional, but recommended: reduce the size of the checkout with tree filtering, see https://github.blog/open-source/git/get-up-to-speed-with-partial-clone-and-shallow-clone/
          ref: ${{ steps.checkout-ref.outputs.ref }}

      - name: Get commit SHA
        id: commit-sha
        shell: bash
        run: echo "sha=$(git rev-parse HEAD)" >> "$GITHUB_OUTPUT"

      - uses: ./.github/actions/set-nx-shas

      - uses: ./.github/actions/setup-node-and-install

      - uses: ./.github/actions/post-check-run
        with:
          state: pending
          name: ci/build
          workflow-file: ci.yml
          sha: ${{ steps.commit-sha.outputs.sha }}

      # Build all projects to create a complete build artifact for downstream e2e jobs.
      # This ensures e2e jobs always have all required build outputs regardless of which projects are affected.
      - run: npx nx run-many -t build --output-style=static

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: dist/
          retention-days: 7
          if-no-files-found: ignore

      - uses: ./.github/actions/post-check-run
        if: always()
        with:
          state: outcome
          name: ci/build
          job-status: ${{ job.status }}
          workflow-file: ci.yml
          sha: ${{ steps.commit-sha.outputs.sha }}

  lint:
    permissions:
      checks: write # Create and update check runs via Checks API
      statuses: write # workflow_dispatch runs post commit status updates via gh api (backward compat)
    runs-on: ubuntu-24.04-arm # Linux arm64
    steps:
      - name: Determine checkout ref
        id: checkout-ref
        shell: bash
        env:
          EVENT_INPUT_REF: ${{ github.event.inputs.ref }}
          DEFAULT_REF: ${{ github.ref }}
        run: |
          if [ -n "${EVENT_INPUT_REF}" ]; then
            echo "ref=${EVENT_INPUT_REF}" >> "$GITHUB_OUTPUT"
          else
            echo "ref=${DEFAULT_REF}" >> "$GITHUB_OUTPUT"
          fi

      - uses: actions/checkout@v5
        with:
          # We need to fetch all branches and commits so that Nx affected has a base to compare against.
          fetch-depth: 0
          filter: tree:0 # Optional, but recommended: reduce the size of the checkout with tree filtering, see https://github.blog/open-source/git/get-up-to-speed-with-partial-clone-and-shallow-clone/
          ref: ${{ steps.checkout-ref.outputs.ref }}

      - name: Get commit SHA
        id: commit-sha
        shell: bash
        run: echo "sha=$(git rev-parse HEAD)" >> "$GITHUB_OUTPUT"

      - uses: ./.github/actions/set-nx-shas

      - uses: ./.github/actions/setup-node-and-install

      - uses: ./.github/actions/post-check-run
        with:
          state: pending
          name: ci/lint
          workflow-file: ci.yml
          sha: ${{ steps.commit-sha.outputs.sha }}

      - name: '[PR] Check formatting'
        if: ${{ github.event_name == 'pull_request' }}
        run: npx nx format:check
      # Nx Affected runs only tasks affected by the changes in this PR/commit. Learn more: https://nx.dev/ci/features/affected
      - run: npx nx affected -t lint --output-style=static

      - uses: ./.github/actions/post-check-run
        if: always()
        with:
          state: outcome
          name: ci/lint
          job-status: ${{ job.status }}
          workflow-file: ci.yml
          sha: ${{ steps.commit-sha.outputs.sha }}

  test:
    permissions:
      checks: write # Create and update check runs via Checks API
      statuses: write # workflow_dispatch runs post commit status updates via gh api (backward compat)
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            node-version: 18
          - os: ubuntu-latest
            node-version: 20
          - os: ubuntu-24.04-arm # Linux
            node-version: 22
          - os: windows-latest # Windows
            node-version: 22
          - os: macos-latest # macOS
            node-version: 22
    runs-on: ${{ matrix.os }}
    steps:
      - name: Determine checkout ref
        id: checkout-ref
        shell: bash
        env:
          EVENT_INPUT_REF: ${{ github.event.inputs.ref }}
          DEFAULT_REF: ${{ github.ref }}
        run: |
          if [ -n "${EVENT_INPUT_REF}" ]; then
            echo "ref=${EVENT_INPUT_REF}" >> "$GITHUB_OUTPUT"
          else
            echo "ref=${DEFAULT_REF}" >> "$GITHUB_OUTPUT"
          fi

      - uses: actions/checkout@v5
        with:
          # We need to fetch all branches and commits so that Nx affected has a base to compare against.
          fetch-depth: 0
          filter: tree:0 # Optional, but recommended: reduce the size of the checkout with tree filtering, see https://github.blog/open-source/git/get-up-to-speed-with-partial-clone-and-shallow-clone/
          ref: ${{ steps.checkout-ref.outputs.ref }}

      - name: Get commit SHA
        id: commit-sha
        shell: bash
        run: echo "sha=$(git rev-parse HEAD)" >> "$GITHUB_OUTPUT"

      - uses: ./.github/actions/set-nx-shas

      - uses: ./.github/actions/setup-node-and-install
        with:
          node-version: ${{ matrix.node-version }}

      - uses: ./.github/actions/post-check-run
        with:
          state: pending
          name: ci/test (${{ matrix.os }}, Node.js ${{ matrix.node-version }})
          workflow-file: ci.yml
          sha: ${{ steps.commit-sha.outputs.sha }}

      # Nx Affected runs only tasks affected by the changes in this PR/commit. Learn more: https://nx.dev/ci/features/affected
      - run: npx nx affected -t test --output-style=static

      - uses: ./.github/actions/post-check-run
        if: always()
        with:
          state: outcome
          name: ci/test (${{ matrix.os }}, Node.js ${{ matrix.node-version }})
          job-status: ${{ job.status }}
          workflow-file: ci.yml
          sha: ${{ steps.commit-sha.outputs.sha }}

  # Determine the GitHub runner image matrix for the e2e job based on event type
  # and branch.
  # Merge to main and manual workflow_dispatch results in the full matrix while
  # PRs and workflow_dispatch for chore/update-dependencies (dependency-update.yml)
  # use the fast matrix
  set-e2e-matrix:
    runs-on: ubuntu-24.04-arm
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    env:
      # `include` as in `matrix.strategy.include`
      MATRIX_FAST: |
        include:
          - os: ubuntu-24.04-arm
      MATRIX_FULL: |
        include:
          - os: ubuntu-latest
          - os: windows-latest
          - os: ubuntu-24.04-arm
          - os: windows-11-arm
          - os: macos-15-intel
          - os: macos-latest
    steps:
      - id: set-matrix
        name: Set matrix output property
        shell: bash
        run: |
          # Set the matrix output property

          # Fail the step on the first error and propagate pipeline failures
          set -eo pipefail

          # Normalize the Git ref to a plain branch name so workflow_dispatch runs
          # can opt into the fast matrix when launched against chore/update-dependencies
          REF_NAME="$GITHUB_REF"

          # Is branch name?
          if [[ "$REF_NAME" == refs/heads/* ]]; then
            REF_NAME="${REF_NAME#refs/heads/}"
          fi

          # Select the matrix YAML based on event type and branch
          if [[ "$GITHUB_EVENT_NAME" == "pull_request" ]]; then
            printf '%s\n' "$MATRIX_FAST" > matrix.yml
          elif [[ "$GITHUB_EVENT_NAME" == "workflow_dispatch" && "$REF_NAME" == "chore/update-dependencies" ]]; then
            printf '%s\n' "$MATRIX_FAST" > matrix.yml
          else
            printf '%s\n' "$MATRIX_FULL" > matrix.yml
          fi

          # Convert the chosen YAML matrix to JSON using js-yaml so the e2e job can consume it
          MATRIX_JSON=$(npx --yes js-yaml matrix.yml | tr -d '\n')
          # Publish the JSON matrix via step outputs for downstream jobs
          echo "matrix=$MATRIX_JSON" >> "$GITHUB_OUTPUT"

  e2e:
    needs:
      - build
      - set-e2e-matrix
    permissions:
      checks: write # Create and update check runs via Checks API
      statuses: write # workflow_dispatch runs post commit status updates via gh api (backward compat)
    strategy:
      matrix: ${{ fromJson(needs.set-e2e-matrix.outputs.matrix) }}
    runs-on: ${{ matrix.os }}
    steps:
      - name: Determine checkout ref
        id: checkout-ref
        shell: bash
        env:
          EVENT_INPUT_REF: ${{ github.event.inputs.ref }}
          DEFAULT_REF: ${{ github.ref }}
        run: |
          if [ -n "${EVENT_INPUT_REF}" ]; then
            echo "ref=${EVENT_INPUT_REF}" >> "$GITHUB_OUTPUT"
          else
            echo "ref=${DEFAULT_REF}" >> "$GITHUB_OUTPUT"
          fi

      - uses: actions/checkout@v5
        with:
          # We need to fetch all branches and commits so that Nx affected has a base to compare against.
          fetch-depth: 0
          filter: tree:0 # Optional, but recommended: reduce the size of the checkout with tree filtering, see https://github.blog/open-source/git/get-up-to-speed-with-partial-clone-and-shallow-clone/
          ref: ${{ steps.checkout-ref.outputs.ref }}

      - name: Get commit SHA
        id: commit-sha
        shell: bash
        run: echo "sha=$(git rev-parse HEAD)" >> "$GITHUB_OUTPUT"

      - uses: ./.github/actions/set-nx-shas

      - uses: ./.github/actions/setup-node-and-install

      - uses: ./.github/actions/post-check-run
        with:
          state: pending
          name: ci/e2e (${{ matrix.os }})
          workflow-file: ci.yml
          sha: ${{ steps.commit-sha.outputs.sha }}

      - name: Download build artifacts
        id: download-artifacts
        uses: actions/download-artifact@v4
        continue-on-error: true
        with:
          name: build-artifacts
          path: dist/

      # Nx Affected runs only tasks affected by the changes in this PR/commit. Learn more: https://nx.dev/ci/features/affected
      # Always exclude task dependencies (--exclude-task-dependencies) because the build job already built all projects
      # and uploaded artifacts. This prevents rebuilding dependencies in each e2e matrix job, saving time
      # and ensuring all e2e jobs use the exact same build artifacts for consistency.
      - name: Run e2e tests
        shell: bash
        run: npx nx affected -t e2e --exclude-task-dependencies --output-style=static

      - uses: ./.github/actions/post-check-run
        if: always()
        with:
          state: outcome
          name: ci/e2e (${{ matrix.os }})
          job-status: ${{ job.status }}
          workflow-file: ci.yml
          sha: ${{ steps.commit-sha.outputs.sha }}
